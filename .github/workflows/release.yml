name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '^1.20'

      - name: Download dependencies
        run: go install

      - name: Run unit tests
        run: make test

      - name: Build
        run: GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -v -o secfetch-${{ matrix.goos }}-${{ matrix.goarch }} .

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: secfetch-${{ matrix.goos }}-${{ matrix.goarch }}
          path: secfetch-${{ matrix.goos }}-${{ matrix.goarch }}


  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload binaries to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./secfetch-${{ matrix.goos }}-${{ matrix.goarch }}
          asset_name: secfetch-${{ matrix.goos }}-${{ matrix.goarch }}
          asset_content_type: application/octet-stream
